#! /usr/bin/env python3

import math
import argparse
from collections import defaultdict
import logging

def main():
    parser = argparse.ArgumentParser(description="Compare two clusters for similarity",)
    parser.add_argument('-f', '--first', help="First file")
    parser.add_argument('-s', '--second', help="Second file")
    parser.add_argument('-o', '--output', help="File to send output to")
    parser.add_argument('-d', '--debug', action="store_true", 
        help="Print debug messages")

    args = parser.parse_args()
    
    if args.debug:
        logging.basicConfig(level=logging.DEBUG)
    else:
        logging.basicConfig(level=logging.ERROR)


    logging.debug("Retrieving arguments")

    file1 = open(args.first, "r")
    file2 = open(args.second, "r")
    #output = args.output

    #logging.debug("Reading in first file to dictionary")
    #dict1 = defaultdict(int,eval(open(file1, "r").read()))
    #logging.debug("Reading in second file to dictionary")
    #dict2 = defaultdict(int,eval(open(file2, "r").read()))
    #logging.debug("Getting unique n_grams")

    logging.debug("Start reading files")
    
    #We could be a bit safer by parsing each argument separately with the
    #proper functions, but this works as well and it's more fun to look at.
    n_gram1 = [eval(x) for x in file1.readline().strip().split()]
    n_gram2 = [eval(x) for x in file2.readline().strip().split()]

    numerator = 0
    denom1 = 0
    denom2 = 0

    while n_gram1 or n_gram2:
        logging.debug("Processing %s and %s" % (n_gram1, n_gram2))
        if (n_gram1[0] > n_gram1[0]) or (not n_gram2):
            #process the n-gram from the first file
            denom1 += n_gram1[1]**2
            n_gram1 = [eval(x) for x in file1.readline().strip().split()]
        elif (n_gram1[0] > n_gram1[0]) or (not n_gram1):
            #process the n-gram from the second file
            denom2 += n_gram2[1]**2
            n_gram2 = [eval(x) for x in file2.readline().strip().split()]
        elif n_gram1[0] == n_gram1[0]:
            #process both of the n_grams
            numerator += n_gram1[1] * n_gram2[1]
            denom1 += n_gram1[1]**2
            denom2 += n_gram2[1]**2
            n_gram1 = [eval(x) for x in file1.readline().strip().split()]
            n_gram2 = [eval(x) for x in file2.readline().strip().split()]
        else:
            #How did we get here?  Clearly an error.
            logging.error("Got to a conditional that'd probably be impossible."
                " N-gram values were %s and %s" % (n_gram1, n_gram2))

    file1.close()
    file2.close()

    # Somehow we're getting division by zero?  It's post-St. Patrick's party, so
    # let's do the naive way of fixing this.
    if math.sqrt(denom1)*math.sqrt(denom2) == 0:
        denom1 = 0.0000001
        denom2 = 0.0000001
    print(numerator/(math.sqrt(denom1)*math.sqrt(denom2)))
        
if __name__ == "__main__":
    main()
